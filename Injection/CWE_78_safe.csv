PHP_Code,is_vulnerable,Description
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlentities__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace2__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlentities__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_addslashes__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlentities__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace2__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_floatval__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_htmlentities__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_addslashes__cat-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlentities__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_htmlentities__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlentities__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__cat-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlentities__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlentities__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlentities__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_addslashes__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_addslashes__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_htmlentities__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_addslashes__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_intval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_addslashes__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_intval__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlentities__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_htmlentities__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_floatval__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_intval__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace2__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__ls-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlentities__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlentities__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__ls-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlentities__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_floatval__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_addslashes__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_floatval__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace__cat-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_floatval__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_addslashes__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__ls-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_intval__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlentities__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace2__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_intval__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_intval__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__cat-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_addslashes__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_intval__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlentities__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_intval__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlentities__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_floatval__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlentities__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_intval__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace2__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_addslashes__cat-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace2__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_addslashes__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_floatval__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_addslashes__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_addslashes__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlentities__cat-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_addslashes__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlentities__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_addslashes__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlentities__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_floatval__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_floatval__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_floatval__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_addslashes__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace2__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_htmlentities__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_floatval__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_addslashes__cat-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_floatval__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace__cat-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlentities__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__ls-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_addslashes__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_htmlentities__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlentities__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_addslashes__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_addslashes__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_htmlentities__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_addslashes__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace2__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_intval__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlentities__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_htmlentities__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_addslashes__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_addslashes__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_intval__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_floatval__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_floatval__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlentities__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlentities__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlentities__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_htmlentities__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace2__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_addslashes__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_floatval__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace2__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_intval__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_addslashes__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlentities__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace2__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_addslashes__ls-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_floatval__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_htmlentities__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlentities__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_addslashes__cat-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_addslashes__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_intval__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlentities__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_addslashes__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_htmlentities__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_htmlentities__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_floatval__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace__ls-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_floatval__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_intval__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_addslashes__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_htmlentities__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace2__cat-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_floatval__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_addslashes__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_addslashes__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_addslashes__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlentities__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_addslashes__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_addslashes__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__ls-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_addslashes__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_addslashes__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_addslashes__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_addslashes__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_intval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__ls-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__cat-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_addslashes__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_intval__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlentities__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_addslashes__ls-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_addslashes__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_addslashes__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_addslashes__ls-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_floatval__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_floatval__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_addslashes__ls-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_htmlentities__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_addslashes__cat-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_addslashes__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_addslashes__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_intval__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace__cat-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace2__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_addslashes__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlentities__cat-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted + 0;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int_sort_of2__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_htmlentities__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_floatval__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_floatval__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlentities__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_intval__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__ls-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlentities__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_addslashes__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__ternary_white_list__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_addslashes__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_addslashes__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-letters_numbers__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_floatval__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_letters__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_floatval__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_htmlentities__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__cat-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlentities__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_numbers__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_addslashes__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_htmlentities__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlentities__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace2__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_intval__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_intval__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_floatval__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace2__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__ternary_white_list__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlentities__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_addslashes__cat-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_addslashes__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_replace__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_floatval__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlentities__cat-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-VALIDATION-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-magic_quotes_filter__cat-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__ternary_white_list__ls-interpretation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__ternary_white_list__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-only_letters__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_addslashes__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_floatval__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_intval__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_addslashes__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace__ls-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-letters_numbers__ls-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlspecialchars__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = (float) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_float__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_intval__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-CLEANING-magic_quotes_filter__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_addslashes__ls-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
 $tained = escapeshellarg($tained);
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_escapeshellarg__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_addslashes__cat-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted += 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_float_sort_of__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace__ls-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_addslashes__ls-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_replace__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace2__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_mysql_real_escape_string__find_size-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_addslashes__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_intval__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_htmlentities__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_intval__find_size-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-func_settype_int__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_htmlentities__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_intval__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_match-letters_numbers__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__ls-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlspecialchars__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_replace2__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted += 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = addslashes($tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_addslashes__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted += 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int_sort_of__find_size-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = addslashes($tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_addslashes__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted + 0;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int_sort_of2__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = addslashes($tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_addslashes__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_match-letters_numbers__cat-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__whitelist_using_array__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = (float) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-cast_float__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__whitelist_using_array__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-func_settype_int__find_size-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-magic_quotes_filter__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-Array__ternary_white_list__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__cat-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_letters__cat-concatenation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_preg_replace__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_replace2__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_mysql_real_escape_string__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_escapeshellarg__cat-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__backticks__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
 $tained = escapeshellarg($tained);
 
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_escapeshellarg__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted += 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-cast_float_sort_of__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_replace__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_FILTER-CLEANING-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__whitelist_using_array__cat-concatenation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__ls-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace__ls-concatenation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_match-only_numbers__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = (int) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__CAST-cast_int__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if (settype($tainted, ""integer""))
 $tainted = $tainted ;
else
 $tainted = 0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-func_settype_int__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\W/si','',$tainted);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace2__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_GET['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_preg_match-letters_numbers__cat-sprintf_%s_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__system__ternary_white_list__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__shell_exec__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_preg_replace__cat-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__func_htmlentities__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__whitelist_using_array__ls-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace__cat-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__GET__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__CAST-func_settype_float__find_size-sprintf_%s_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_preg_match-only_letters__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_FILTER-VALIDATION-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = floatval($tainted);
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_floatval__find_size-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlentities($tainted, ENT_QUOTES);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_htmlentities__cat-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_htmlspecialchars__ls-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_FILTER-CLEANING-magic_quotes_filter__ls-interpretation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__ternary_white_list__ls-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace2__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_floatval__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = (float) $tainted ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__CAST-cast_float__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
 $tained = escapeshellarg($tained);
 
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__backticks__func_escapeshellarg__cat-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = floatval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_floatval__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-func_settype_float__find_size-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-number_int_filter__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__find_size-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__SESSION__ternary_white_list__ls-sprintf_%s_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = $tainted + 0;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__popen__CAST-cast_int_sort_of2__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_preg_match-letters_numbers__cat-interpretation_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = mysql_real_escape_string($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_mysql_real_escape_string__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
 $tained = escapeshellarg($tained);
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_escapeshellarg__cat-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-VALIDATION-number_int_filter__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_int_sort_of__find_size-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = (int) $tainted ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__unserialize__CAST-cast_int__find_size-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_htmlspecialchars__ls-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$tainted = (int) $tainted ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__shell_exec__CAST-cast_int__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-Array__func_preg_match-only_letters__cat-sprintf_%s_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_FILTER-CLEANING-number_int_filter__find_size-concatenation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_floatval__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_replace__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__ternary_white_list__ls-concatenation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = floatval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_floatval__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
 $tained = escapeshellarg($tained);
 
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__exec__func_escapeshellarg__ls-concatenation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted += 0.0 ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__CAST-cast_float_sort_of__find_size-sprintf_%s_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__array-GET__func_FILTER-VALIDATION-number_int_filter__find_size-concatenation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if (filter_var($sanitized, FILTER_VALIDATE_INT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__func_FILTER-VALIDATION-number_int_filter__find_size-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = preg_replace('/\'/', '', $tainted);
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__func_preg_replace__cat-concatenation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\'/', '', $tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace__ls-sprintf_%s_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_match-only_numbers__find_size-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input[1];
 }
 public function __construct(){
 $this->input = array();
 $this->input[0]= 'safe' ;
 $this->input[1]= $_GET['UserData'] ;
 $this->input[2]= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = intval($tainted);
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-Array__func_intval__find_size-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__func_FILTER-CLEANING-number_float_filter__find_size-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
$tainted = intval($tainted);
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__POST__func_intval__find_size-interpretation_simple_quote
"<?php
class Input{
 public function getInput(){
 return $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$tainted = preg_replace('/\W/si','',$tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__object-directGet__func_preg_replace2__cat-interpretation_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__fopen__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = sprintf(""cat '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__popen__func_htmlspecialchars__cat-sprintf_%s_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__whitelist_using_array__ls-interpretation_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input;
 }
 public function __construct(){
 $this->input = $_GET['UserData'] ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-classicGet__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$tainted = `cat /tmp/tainted.txt`;
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__backticks__ternary_white_list__find_size-interpretation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$tainted = addslashes($tainted);
$query = sprintf(""ls '%s'"", $tainted);
$ret = system($query);
?>",0,CWE_78__exec__func_addslashes__ls-sprintf_%s_simple_quote
"<?php
$handle = @fopen(""/tmp/tainted.txt"", ""r"");
if ($handle) {
 if(($tainted = fgets($handle, 4096)) == false) {
 $tainted = """";
 }
 fclose($handle);
} else {
 $tainted = """";
}
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__fopen__ternary_white_list__cat-concatenation_simple_quote
"<?php
$tainted = system('ls', $retval);
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__system__func_FILTER-CLEANING-magic_quotes_filter__cat-interpretation_simple_quote
"<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__array-GET__whitelist_using_array__find_size-interpretation_simple_quote
"<?php
$handle = popen('/bin/cat /tmp/tainted.txt', 'r');
$tainted = fread($handle, 4096);
pclose($handle);
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__popen__func_FILTER-CLEANING-number_float_filter__find_size-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
if(settype($tainted, ""float""))
 $tainted = $tainted ;
else
 $tainted = 0.0 ;
$query = ""find / size ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__CAST-func_settype_float__find_size-interpretation_simple_quote
"<?php
$tainted = $_GET['UserData'];
$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__GET__func_FILTER-CLEANING-number_float_filter__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__proc_open__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
$descriptorspec = array(
 0 => array(""pipe"", ""r""),
 1 => array(""pipe"", ""w""),
 2 => array(""file"", ""/tmp/error-output.txt"", ""a"")
 );
$cwd = '/tmp';
$process = proc_open('more /tmp/tainted.txt', $descriptorspec, $pipes, $cwd, NULL);
if (is_resource($process)) {
 fclose($pipes[0]);
 $tainted = stream_get_contents($pipes[1]);
 fclose($pipes[1]);
 $return_value = proc_close($process);
}
$tainted = htmlspecialchars($tainted, ENT_QUOTES);
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__proc_open__func_htmlspecialchars__ls-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
 $tainted = $sanitized ;
 
$query = ""cat '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__unserialize__func_FILTER-CLEANING-magic_quotes_filter__cat-concatenation_simple_quote
"<?php
$tainted = $_SESSION['UserData'];
$tainted = addslashes($tainted);
$query = ""cat ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__SESSION__func_addslashes__cat-interpretation_simple_quote
"<?php
$string = $_POST['UserData'] ;
$tainted = unserialize($string);
 
$tainted = $tainted == 'safe1' ? 'safe1' : 'safe2';
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__unserialize__ternary_white_list__ls-interpretation_simple_quote
"<?php
$tainted = $_POST['UserData'];
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT))
 $tainted = $sanitized ;
else
 $tainted = """" ;
$query = ""find / size '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__POST__func_FILTER-VALIDATION-number_float_filter__find_size-concatenation_simple_quote
"<?php
$tainted = shell_exec('cat /tmp/tainted.txt');
$legal_table = array(""safe1"", ""safe2"");
if (in_array($tainted, $legal_table, true)) {
 $tainted = $tainted;
} else {
 $tainted = $legal_table[0];
}
$query = sprintf(""find / size '%d'"", $tainted);
$ret = system($query);
?>",0,CWE_78__shell_exec__whitelist_using_array__find_size-sprintf_%s_simple_quote
"<?php
class Input{
 private $input;
 public function getInput(){
 return $this->input['realOne'];
 }
 public function __construct(){
 $this->input = array();
 $this->input['test']= 'safe' ;
 $this->input['realOne']= $_GET['UserData'] ;
 $this->input['trap']= 'safe' ;
 }
}
$temp = new Input();
$tainted = $temp->getInput();
$re = ""/^[a-zA-Z]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls '"". $tainted . ""'"";
$ret = system($query);
?>",0,CWE_78__object-indexArray__func_preg_match-only_letters__ls-concatenation_simple_quote
"<?php
$script = ""/tmp/tainted.php"";
exec($script, $result, $return);
$tainted = $result[0];
$re = ""/^[a-zA-Z0-9]*$/"";
if(preg_match($re, $tainted) == 1){
 $tainted = $tainted;
}
else{
 $tainted = """";
}
$query = ""ls ' $tainted '"";
$ret = system($query);
?>",0,CWE_78__exec__func_preg_match-letters_numbers__ls-interpretation_simple_quote
